#BlueJ class context
comment0.target=Investigate
comment0.text=\n\ Investigate.java\n\ This\ class\ investigates\ the\ RATs\ and\ uses\ AdjListsGraph.java.\n\n\ @author\ yguo2,\ hkim22\n\ @version\ 11/20/2019\n
comment1.params=
comment1.target=Investigate()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ Investigate\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ Main\ driver\ of\ the\ test\n
comment2.params=file_name
comment2.target=void\ readFile(java.lang.String)
comment2.text=\n\ Read\ from\ a\ file\ that\ contains\ information\ of\ the\ RATS\n\ \n\ @param\ file_name\ \ the\ file\ that\ contains\ RAT\ information\n
comment3.params=stories
comment3.target=java.util.LinkedList\ divideStories(java.lang.String)
comment3.text=\n\ Helper\ method\n\ Divide\ the\ stories\ from\ a\ LinkedList\ add\ them\ to\ the\ graph\ as\ vertices\n\ \n\ @param\ \ stories\ \ \ a\ string\ of\ stories\n\ @return\ \ a\ linked\ list\ of\ all\ the\ stories\n
comment4.params=
comment4.target=void\ makeEdges()
comment4.text=\n\ Add\ edges\ to\ the\ graph\n
comment5.params=tgf_file_name
comment5.target=void\ makeTGF(java.lang.String)
comment5.text=\n\ Save\ graph\ to\ TGF\ file\n\ \n\ @param\ tgf_file_name\ The\ name\ of\ the\ output\ file\n
comment6.params=
comment6.target=java.lang.String\ findActive()
comment6.text=\n\ Find\ and\ return\ the\ most\ active\ RAT\ object\n\ \n\ Answers\ Research\ Question\ \#1\n\ @return\ a\ string\ of\ the\ userID\ of\ the\ most\ active\ RAT\n
comment7.params=
comment7.target=java.lang.String\ findPopular()
comment7.text=\n\ Find\ and\ return\ the\ most\ popular\ story\n\ \n\ Answers\ Research\ Question\ \#2\n\ @return\ a\ string\ of\ the\ identification\ number\ of\ the\ most\ popular\ story\n
comment8.params=
comment8.target=boolean\ runDFS()
comment8.text=\n\ Runs\ DFS\ on\ the\ RATSgraph(AdjListGraph)\ and\ test\ if\ the\ graph\ is\ connected.\n\ Answers\ Research\ Question\ \#3\n\ \n\ @return\ true\ if\ the\ diameter\ of\ the\ largest\ connected\ components\ is\ equal\ to\ the\ number\ of\ total\ vertices\n\ \ \ \ \ \ \ \ \ false\ otherwise\n
comment9.params=
comment9.target=int\ runBFS()
comment9.text=\n\ Use\ the\ BFS\ method\ in\ AdjListsGraph.java\ to\ find\ out\ how\ many\ layers\ the\ LCC\ have\n\ \n\ Answers\ Research\ Question\ \#4\n\ @return\ \ number\ of\ layers\ in\ the\ LCC\n
numComments=11
